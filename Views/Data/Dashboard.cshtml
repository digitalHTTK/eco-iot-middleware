@model IEnumerable<Plan_io_T.Models.ArduinoData>

@{
    ViewData["Title"] = "Dashboard";
}

<asp:Content ID="HeaderContent" runat="server" ContentPlaceHolderID="HeadContent">
    <link rel='stylesheet' type='text/css' media='screen' href='~/css/dashboard.css' runat="server">
    <link rel='stylesheet' type='text/css' media='screen' href='~/css/footer.css' runat="server">
</asp:Content>

<header>
    <a class="page__header-logo" asp-controller="Home" asp-action="Index">Eco<span class="page__header-logo-2">(io)</span>T</a>
    <div class="page__header-nav">
        <p class="page__header-cur">Панель управления</p>
        <a asp-controller="Data" asp-action="System">Система</a>
    </div>
    <div class="page__header-user" style="cursor: pointer;" onclick="dropdown()">
        <div class="page__dropdown" id="page__dropdown">
            @if (User.IsInRole("admin")) {
                <a class="page__dropdown-out" asp-controller="Users" asp-action="Index">Войти в панель администрации</a>
            }
            <form method="post" asp-controller="Account" asp-action="Logout">
                <input class="page__out-button" type="submit" value="Выйти из аккаунта" />
            </form>
        </div>
        <div class="page__menu">
            @if (User.IsInRole("admin")) {
                <p class="page__menu-name">Администратор</p>
            } else {
                <p class="page__menu-name">Пользователь</p>
            }
            <p class="page__menu-mail">@User.Identity.Name</p>
        </div>
        <div>
            @if (User.IsInRole("admin")) {
                <div class="page__header-avatar">SU</div>
            } else {
                <div class="page__header-avatar" style="background-color: #00926B;">CU</div>
            }
        </div>
    </div>
</header>

<div class="page__menu-background" onclick="hideBackground()"></div>

<div class="page__main-content">

    <div class="page__main-card">
        <div>
            <p>Добро пожаловать, @User.Identity.Name</p>
            <div class="page__main-card-rating">
                <div class="page__main-card-rating-num">@ViewData["Score"]</div>
                <div class="page__main-card-rating-text">
                    <h1>Оценка состояния окружающего воздуха</h1>
                    <div>На основе данных мониторинга</div>
                </div>
            </div>
        </div>
        <div class="page__main-card-par">
            <h1>Текущие параметры</h1>
            <div class="page__main-card-par-all">
                <div class="page__main-card-par-sep">
                    <div class="page__main-card-par-sep-h">время</div>
                    <div class="page__main-card-par-sep-data time">@ViewData["Time"]</div>
                </div>
                <div class="page__main-card-par-sep">
                    <div class="page__main-card-par-sep-h">температура воздуха</div>
                    <div class="page__main-card-par-sep-data temp">@ViewData["Temperature"] °C</div>
                </div>
                <div class="page__main-card-par-sep">
                    <div class="page__main-card-par-sep-h">влажность воздуха</div>
                    <div class="page__main-card-par-sep-data hum">@ViewData["Humidity"]%</div>
                </div>
                <div class="page__main-card-par-sep">
                    <div class="page__main-card-par-sep-h">концентрация CO<sub>2</sub></div>
                    <div class="page__main-card-par-sep-data co2">@ViewData["co2Concentration"] ppm</div>
                </div>
            </div>
        </div>
    </div>

    <div class="page__small-card">

        <div class="page__small-card-content">
            <h1>Температура окружающего воздуха</h1>
            <p>Период обновления - 5 секунд</p>
            <canvas id="tempChart"></canvas>
        </div>

        <div class="page__small-card-content">
            <h1>Влажность окружающего воздуха</h1>
            <p>Период обновления - 5 секунд</p>
            <canvas id="humChart"></canvas>
        </div>

        <div class="page__small-card-content">
            <h1>Концентрация угарного газа</h1>
            <p>Период обновления - 5 секунд</p>
            <canvas id="coChart"></canvas>
        </div>

        <div class="page__small-card-content">
            <h1>Концентрация углекислого газа</h1>
            <p>Период обновления - 5 секунд</p>
            <canvas id="co2Chart"></canvas>
        </div>

        <div class="page__small-card-content">
            <h1>Концентрация LPG</h1>
            <p>Период обновления - 5 секунд</p>
            <canvas id="lpgChart"></canvas>
        </div>

        <div class="page__small-card-content">
            <h1>Концентрация дыма</h1>
            <p>Период обновления - 5 секунд</p>
            <canvas id="smkChart"></canvas>
        </div>

        <div class="page__small-card-content">
            <h1>Данные мониторинга</h1>
            <p>Таблица с данными мониторинга</p>
            <form>
                <div>
                    <button asp-controller="ArduinoDatas" asp-action="Index">Перейти</button>
                </div>
            </form>
        </div>

    </div>

</div>

<footer class="page__footer">
    <div class="footer__socials">
        <div>
            <div class="footer__vk-icon"></div>
            <a class="landing__link" href="https://www.vk.com/funny_yellow_dog">vk.com/funny_yellow_dog</a>
        </div>
        <div>
            <div class="footer__email-icon"></div>
            <div class="landing__link">example@mail.ru</div>
        </div>
    </div>
    <div class="footer__about">
        <div>Eco(io)t, 2021</div>
    </div>
</footer>


@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>
    <script src="~/js/jQuery.js"></script>
    <script src="~/js/dropdown.js"></script>
    <script>
        let buttons = document.querySelectorAll(".relay_buttons");
        let buttons_2 = document.querySelectorAll(".bulb_buttons");

        var ctx1 = document.getElementById('tempChart').getContext('2d');
        var ctx2 = document.getElementById('humChart').getContext('2d');
        var ctx3 = document.getElementById('coChart').getContext('2d');
        var ctx4 = document.getElementById('co2Chart').getContext('2d');
        var ctx5 = document.getElementById('lpgChart').getContext('2d');
        var ctx6 = document.getElementById('smkChart').getContext('2d');

        const labels1 = ["00:00", "00:00", "00:00", "00:00", "00:00",
                         "00:00", "00:00", "00:00"];
        const labels2 = ["00:00", "00:00", "00:00", "00:00", "00:00",
                          "00:00", "00:00", "00:00"];
        const labels3 = ["00:00", "00:00", "00:00", "00:00", "00:00",
                          "00:00", "00:00", "00:00"];
        const labels4 = ["00:00", "00:00", "00:00", "00:00", "00:00",
                          "00:00", "00:00", "00:00"];
        const labels5 = ["00:00", "00:00", "00:00", "00:00", "00:00",
                          "00:00", "00:00", "00:00"];
        const labels6 = ["00:00", "00:00", "00:00", "00:00", "00:00",
                          "00:00", "00:00", "00:00"];

        var tempChart = new Chart(ctx1, {
            type: 'line',
            data: {
                labels: labels1,
                datasets: [
                    {
                        label: 'Узел 1',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(72, 155, 233, 1)',
                        backgroundColor: 'rgba(72, 155, 233, 0)',
                    },
                    {
                        label: 'Узел 2',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(233, 120, 72, 1)',
                        backgroundColor: 'rgba(233, 120, 72, 0)',
                    },
                    {
                        label: 'Узел 3',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(236, 84, 122, 1)',
                        backgroundColor: 'rgba(236, 84, 122, 0)',
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                    }
                }
            },
        });
        var humChart = new Chart(ctx2, {
            type: 'line',
            data: {
                labels: labels2,
                datasets: [
                    {
                        label: 'Узел 1',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(72, 155, 233, 1)',
                        backgroundColor: 'rgba(72, 155, 233, 0)',
                    },
                    {
                        label: 'Узел 2',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(233, 120, 72, 1)',
                        backgroundColor: 'rgba(233, 120, 72, 0)',
                    },
                    {
                        label: 'Узел 3',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(236, 84, 122, 1)',
                        backgroundColor: 'rgba(236, 84, 122, 0)',
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                    }
                }
            },
        });
        var coChart = new Chart(ctx3, {
            type: 'line',
            data: {
                labels: labels3,
                datasets: [
                    {
                        label: 'Узел 1',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(72, 155, 233, 1)',
                        backgroundColor: 'rgba(72, 155, 233, 0)',
                    },
                    {
                        label: 'Узел 2',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(233, 120, 72, 1)',
                        backgroundColor: 'rgba(233, 120, 72, 0)',
                    },
                    {
                        label: 'Узел 3',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(236, 84, 122, 1)',
                        backgroundColor: 'rgba(236, 84, 122, 0)',
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                    }
                }
            },
        });
        var co2Chart = new Chart(ctx4, {
            type: 'line',
            data: {
                labels: labels4,
                datasets: [
                    {
                        label: 'Узел 1',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(72, 155, 233, 1)',
                        backgroundColor: 'rgba(72, 155, 233, 0)',
                    },
                    {
                        label: 'Узел 2',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(233, 120, 72, 1)',
                        backgroundColor: 'rgba(233, 120, 72, 0)',
                    },
                    {
                        label: 'Узел 3',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(236, 84, 122, 1)',
                        backgroundColor: 'rgba(236, 84, 122, 0)',
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                    }
                }
            },
        });
        var lpgChart = new Chart(ctx5, {
            type: 'line',
            data: {
                labels: labels5,
                datasets: [
                    {
                        label: 'Узел 1',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(72, 155, 233, 1)',
                        backgroundColor: 'rgba(72, 155, 233, 0)',
                    },
                    {
                        label: 'Узел 2',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(233, 120, 72, 1)',
                        backgroundColor: 'rgba(233, 120, 72, 0)',
                    },
                    {
                        label: 'Узел 3',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(236, 84, 122, 1)',
                        backgroundColor: 'rgba(236, 84, 122, 0)',
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                    }
                }
            },
        });
        var smkChart = new Chart(ctx6, {
            type: 'line',
            data: {
                labels: labels6,
                datasets: [
                    {
                        label: 'Узел 1',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(72, 155, 233, 1)',
                        backgroundColor: 'rgba(72, 155, 233, 0)',
                    },
                    {
                        label: 'Узел 2',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(233, 120, 72, 1)',
                        backgroundColor: 'rgba(233, 120, 72, 0)',
                    },
                    {
                        label: 'Узел 3',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(236, 84, 122, 1)',
                        backgroundColor: 'rgba(236, 84, 122, 0)',
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                    }
                }
            },
        });

        buttons.forEach(but => but.addEventListener("click", pressedHandler));
        buttons_2.forEach(but => but.addEventListener("click", pressedHandler_2));

        ajaxChartsInit();

        function addData(chart, label, data) {
            chart.data.labels.push(label);
            i = 0;
            chart.data.datasets.forEach((dataset) => {
                if (i == 0) dataset.data.push(data[0]);
                if (i == 1) dataset.data.push(data[1]);
                if (i == 2) dataset.data.push(data[2]);
                i++;
            });
            chart.update();
        }

        function removeData(chart) {
            chart.data.labels.splice(0, 1);
            chart.data.datasets.forEach((dataset) => {
                dataset.data.splice(0, 1);
            });
            chart.update();
        }

        function pressedHandler(event) {
            event.preventDefault();
            let target = event.target;
            buttons.forEach(but => but.classList.remove("page__button-checked"));
            target.classList.add("page__button-checked");
        }

        function pressedHandler_2(event) {
            event.preventDefault();
            let target = event.target;
            buttons_2.forEach(but => but.classList.remove("page__button-checked"));
            target.classList.add("page__button-checked");
        }

        function ajaxR() {
            $.ajax({
                url: "SendDataToFront",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: "GET",
                success: function (data) {
                    let jsonData = JSON.parse(data);
                    let newDate = new Date();
                    let hour = newDate.getHours();
                    let minute = newDate.getMinutes();
                    if (hour < 10) hour = "0" + newDate.getHours();
                    if (minute < 10) minute = "0" + newDate.getMinutes();
                    let timeStr = hour + ":" + minute;
                    document.querySelector(".time").textContent = timeStr;
                    document.querySelector(".temp").textContent = jsonData.temp + " °C";
                    document.querySelector(".hum").textContent = jsonData.hum + "%";
                    document.querySelector(".co2").textContent = jsonData.co2 + " ppm";
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function chartInitHelper(chart, data, time) {
            let i = 0;
            while (i < 8) {
                let arr = new Array();
                arr[2] = data[i];
                arr[1] = data[8 + i];
                arr[0] = data[16 + i];
                removeData(chart);
                addData(chart, time, arr);
                i++;
            }
        }

        function ajaxChartsInit() {
            $.ajax({
                url: "InitDataToCharts",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: "GET",
                success: function (data) {
                    let jsonData = JSON.parse(data);

                    let temp = new Array();
                    let hum = new Array();
                    let co = new Array();
                    let co2 = new Array();
                    let smk = new Array();
                    let lpg = new Array();

                    for (let node of jsonData[0].nodeData) {
                        temp.push(node.temp);
                        hum.push(node.hum);
                        co.push(node.co);
                        co2.push(node.co2);
                        smk.push(node.smk);
                        lpg.push(node.lpg);
                    }
                    for (let node of jsonData[1].nodeData) {
                        temp.push(node.temp);
                        hum.push(node.hum);
                        co.push(node.co);
                        co2.push(node.co2);
                        smk.push(node.smk);
                        lpg.push(node.lpg);
                    }
                    for (let node of jsonData[2].nodeData) {
                        temp.push(node.temp);
                        hum.push(node.hum);
                        co.push(node.co);
                        co2.push(node.co2);
                        smk.push(node.smk);
                        lpg.push(node.lpg);
                    }

                    temp = temp.reverse();
                    hum = hum.reverse();
                    co = co.reverse();
                    co2 = co2.reverse();
                    lpg = lpg.reverse();
                    smk = smk.reverse();

                    chartInitHelper(tempChart, temp, jsonData[0].time);
                    chartInitHelper(humChart, hum, jsonData[0].time);
                    chartInitHelper(coChart, co, jsonData[0].time);
                    chartInitHelper(co2Chart, co2, jsonData[0].time);
                    chartInitHelper(lpgChart, lpg, jsonData[0].time);
                    chartInitHelper(smkChart, smk, jsonData[0].time);
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function ajaxCharts() {
            $.ajax({
                url: "SendDataToCharts",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: "GET",
                success: function (data) {
                    let jsonData = JSON.parse(data);

                    let temp = new Array();
                    let hum = new Array();
                    let co = new Array();
                    let co2 = new Array();
                    let smk = new Array();
                    let lpg = new Array();

                    let node1 = jsonData[0].nodeData;
                    temp.push(node1.temp);
                    hum.push(node1.hum);
                    co.push(node1.co);
                    co2.push(node1.co2);
                    smk.push(node1.smk);
                    lpg.push(node1.lpg);

                    let node2 = jsonData[1].nodeData;
                    temp.push(node2.temp);
                    hum.push(node2.hum);
                    co.push(node2.co);
                    co2.push(node2.co2);
                    smk.push(node2.smk);
                    lpg.push(node2.lpg);

                    let node3 = jsonData[2].nodeData;
                    temp.push(node3.temp);
                    hum.push(node3.hum);
                    co.push(node3.co);
                    co2.push(node3.co2);
                    smk.push(node3.smk);
                    lpg.push(node3.lpg);

                    removeData(tempChart);
                    addData(tempChart, jsonData[0].time, temp);

                    removeData(humChart);
                    addData(humChart, jsonData[0].time, hum);

                    removeData(coChart);
                    addData(coChart, jsonData[0].time, co);

                    removeData(co2Chart);
                    addData(co2Chart, jsonData[0].time, co2);

                    removeData(lpgChart);
                    addData(lpgChart, jsonData[0].time, lpg);

                    removeData(smkChart);
                    addData(smkChart, jsonData[0].time, smk);
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function ajaxRelOn() {
            $.ajax({
                url: "SendPost?command=AR1",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: "POST",
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function ajaxBuzOn() {
            $.ajax({
                url: "SendPost?command=AZ1",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: "POST",
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function ajaxBuzOff() {
            $.ajax({
                url: "SendPost?command=AZ0",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: "POST",
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function ajaxRelOff() {
            $.ajax({
                url: "SendPost?command=AR0",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: "POST",
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function ajaxGetData() {
            $.ajax({
                url: "NewRecord",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: "POST",
                error: function (error) {
                    console.error(error);
                }
            });
        }

        setInterval(ajaxCharts, 1000 * 5);
        setInterval(ajaxR, 1000 * 3);
        $('#bulb-on').click(ajaxBuzOn);
        $('#bulb-off').click(ajaxBuzOff);
        $('#relay-on').click(ajaxRelOn);
        $('#relay-off').click(ajaxRelOff);
        $('#get-data').click(ajaxGetData);
    </script>
}