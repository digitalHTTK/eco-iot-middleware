#pragma checksum "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5d5fb07e18f80a8b3f8a3dcfe04ada6151669605"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Data_Dashboard), @"mvc.1.0.view", @"/Views/Data/Dashboard.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "B:\GitHub\eco-iot-middleware\Views\_ViewImports.cshtml"
using Plan_io_T;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "B:\GitHub\eco-iot-middleware\Views\_ViewImports.cshtml"
using Plan_io_T.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5d5fb07e18f80a8b3f8a3dcfe04ada6151669605", @"/Views/Data/Dashboard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a12a93978cc8dba65c829b2c53c9ab37fab173b6", @"/Views/_ViewImports.cshtml")]
    public class Views_Data_Dashboard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<Plan_io_T.Models.ArduinoData>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("media", new global::Microsoft.AspNetCore.Html.HtmlString("screen"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/dashboard.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("runat", new global::Microsoft.AspNetCore.Html.HtmlString("server"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/footer.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("page__header-logo"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Data", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "System", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("page__dropdown-out"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Users", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Account", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Logout", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "ArduinoDatas", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jQuery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/dropdown.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
  
    ViewData["Title"] = "Dashboard";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<asp:Content ID=\"HeaderContent\" runat=\"server\" ContentPlaceHolderID=\"HeadContent\">\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "5d5fb07e18f80a8b3f8a3dcfe04ada615166960510182", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "5d5fb07e18f80a8b3f8a3dcfe04ada615166960511551", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</asp:Content>\r\n\r\n<header>\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5d5fb07e18f80a8b3f8a3dcfe04ada615166960512954", async() => {
                WriteLiteral("Eco<span class=\"page__header-logo-2\">(io)</span>T");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    <div class=\"page__header-nav\">\r\n        <p class=\"page__header-cur\">Панель управления</p>\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5d5fb07e18f80a8b3f8a3dcfe04ada615166960514555", async() => {
                WriteLiteral("Система");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    </div>\r\n    <div class=\"page__header-user\" style=\"cursor: pointer;\" onclick=\"dropdown()\">\r\n        <div class=\"page__dropdown\" id=\"page__dropdown\">\r\n");
#nullable restore
#line 20 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
             if (User.IsInRole("admin")) {

#line default
#line hidden
#nullable disable
            WriteLiteral("                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5d5fb07e18f80a8b3f8a3dcfe04ada615166960516318", async() => {
                WriteLiteral("Войти в панель администрации");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_12.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 22 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5d5fb07e18f80a8b3f8a3dcfe04ada615166960517984", async() => {
                WriteLiteral("\r\n                <input class=\"page__out-button\" type=\"submit\" value=\"Выйти из аккаунта\" />\r\n            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_15.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        </div>\r\n        <div class=\"page__menu\">\r\n");
#nullable restore
#line 28 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
             if (User.IsInRole("admin")) {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <p class=\"page__menu-name\">Администратор</p>\r\n");
#nullable restore
#line 30 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
            } else {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <p class=\"page__menu-name\">Пользователь</p>\r\n");
#nullable restore
#line 32 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("            <p class=\"page__menu-mail\">");
#nullable restore
#line 33 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
                                  Write(User.Identity.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n        </div>\r\n        <div>\r\n");
#nullable restore
#line 36 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
             if (User.IsInRole("admin")) {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <div class=\"page__header-avatar\">SU</div>\r\n");
#nullable restore
#line 38 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
            } else {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <div class=\"page__header-avatar\" style=\"background-color: #00926B;\">CU</div>\r\n");
#nullable restore
#line 40 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </div>\r\n    </div>\r\n</header>\r\n\r\n<div class=\"page__menu-background\" onclick=\"hideBackground()\"></div>\r\n\r\n<div class=\"page__main-content\">\r\n\r\n    <div class=\"page__main-card\">\r\n        <div>\r\n            <p>Добро пожаловать, ");
#nullable restore
#line 51 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
                            Write(User.Identity.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n            <div class=\"page__main-card-rating\">\r\n                <div class=\"page__main-card-rating-num\">");
#nullable restore
#line 53 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
                                                   Write(ViewData["Score"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</div>
                <div class=""page__main-card-rating-text"">
                    <h1>Оценка состояния окружающего воздуха</h1>
                    <div>На основе данных мониторинга</div>
                </div>
            </div>
        </div>
        <div class=""page__main-card-par"">
            <h1>Текущие параметры</h1>
            <div class=""page__main-card-par-all"">
                <div class=""page__main-card-par-sep"">
                    <div class=""page__main-card-par-sep-h"">время</div>
                    <div class=""page__main-card-par-sep-data time"">");
#nullable restore
#line 65 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
                                                              Write(ViewData["Time"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n                </div>\r\n                <div class=\"page__main-card-par-sep\">\r\n                    <div class=\"page__main-card-par-sep-h\">температура воздуха</div>\r\n                    <div class=\"page__main-card-par-sep-data temp\">");
#nullable restore
#line 69 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
                                                              Write(ViewData["Temperature"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n                </div>\r\n                <div class=\"page__main-card-par-sep\">\r\n                    <div class=\"page__main-card-par-sep-h\">влажность воздуха</div>\r\n                    <div class=\"page__main-card-par-sep-data humi\">");
#nullable restore
#line 73 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
                                                              Write(ViewData["Humidity"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n                </div>\r\n                <div class=\"page__main-card-par-sep\">\r\n                    <div class=\"page__main-card-par-sep-h\">концентрация CO2</div>\r\n                    <div class=\"page__main-card-par-sep-data mois\">");
#nullable restore
#line 77 "B:\GitHub\eco-iot-middleware\Views\Data\Dashboard.cshtml"
                                                              Write(ViewData["co2Concentration"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</div>
                </div>
            </div>
        </div>
    </div>

    <div class=""page__small-card"">

        <div class=""page__small-card-content"">
            <h1>Температура окружающего воздуха</h1>
            <p>Период обновления - 10 секунд</p>
            <canvas id=""tempChart""></canvas>
        </div>

        <div class=""page__small-card-content"">
            <h1>Влажность окружающего воздуха</h1>
            <p>Период обновления - 10 секунд</p>
            <canvas id=""humChart""></canvas>
        </div>

        <div class=""page__small-card-content"">
            <h1>Концентрация окиси углерода</h1>
            <p>Период обновления - 10 секунд</p>
            <canvas id=""coChart""></canvas>
        </div>

        <div class=""page__small-card-content"">
            <h1>Концентрация углекислого газа</h1>
            <p>Период обновления - 10 секунд</p>
            <canvas id=""co2Chart""></canvas>
        </div>

        <div class=""page__small-card-content"">
    ");
            WriteLiteral(@"        <h1>Концентрация LPG</h1>
            <p>Период обновления - 10 секунд</p>
            <canvas id=""lpgChart""></canvas>
        </div>

        <div class=""page__small-card-content"">
            <h1>Концентрация дыма</h1>
            <p>Период обновления - 10 секунд</p>
            <canvas id=""smkChart""></canvas>
        </div>

        <div class=""page__small-card-content"">
            <h1>Данные мониторинга</h1>
            <p>Таблица с данными мониторинга</p>
            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5d5fb07e18f80a8b3f8a3dcfe04ada615166960526620", async() => {
                WriteLiteral("\r\n                <div>\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("button", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5d5fb07e18f80a8b3f8a3dcfe04ada615166960526924", async() => {
                    WriteLiteral("Перейти");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper.Controller = (string)__tagHelperAttribute_16.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper.Action = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </div>\r\n            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </div>

    </div>

</div>

<footer class=""page__footer"">
    <div class=""footer__socials"">
        <div>
            <div class=""footer__vk-icon""></div>
            <a class=""landing__link"" href=""https://www.vk.com/funny_yellow_dog"">vk.com/funny_yellow_dog</a>
        </div>
        <div>
            <div class=""footer__email-icon""></div>
            <div class=""landing__link"">example@mail.ru</div>
        </div>
    </div>
    <div class=""footer__about"">
        <div>Eco(io)t, 2021</div>
    </div>
</footer>


");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js\"></script>\r\n    <script src=\"https://www.chartjs.org/samples/2.9.4/utils.js\"></script>\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5d5fb07e18f80a8b3f8a3dcfe04ada615166960530246", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5d5fb07e18f80a8b3f8a3dcfe04ada615166960531347", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>
        let buttons = document.querySelectorAll("".relay_buttons"");
        let buttons_2 = document.querySelectorAll("".bulb_buttons"");

        var ctx1 = document.getElementById('tempChart').getContext('2d');
        var ctx2 = document.getElementById('humChart').getContext('2d');
        var ctx3 = document.getElementById('coChart').getContext('2d');
        var ctx4 = document.getElementById('co2Chart').getContext('2d');
        var ctx5 = document.getElementById('lpgChart').getContext('2d');
        var ctx6 = document.getElementById('smkChart').getContext('2d');

        const labels1 = [""00:00"", ""00:00"", ""00:00"", ""00:00"", ""00:00"",
                         ""00:00"", ""00:00"", ""00:00""];
        const labels2 = [""00:00"", ""00:00"", ""00:00"", ""00:00"", ""00:00"",
                          ""00:00"", ""00:00"", ""00:00""];
        const labels3 = [""00:00"", ""00:00"", ""00:00"", ""00:00"", ""00:00"",
                          ""00:00"", ""00:00"", ""00:00""];
        const labels4 = [""00:00"", ""00:00"", ""00");
                WriteLiteral(@":00"", ""00:00"", ""00:00"",
                          ""00:00"", ""00:00"", ""00:00""];
        const labels5 = [""00:00"", ""00:00"", ""00:00"", ""00:00"", ""00:00"",
                          ""00:00"", ""00:00"", ""00:00""];
        const labels6 = [""00:00"", ""00:00"", ""00:00"", ""00:00"", ""00:00"",
                          ""00:00"", ""00:00"", ""00:00""];

        var tempChart = new Chart(ctx1, {
            type: 'line',
            data: {
                labels: labels1,
                datasets: [
                    {
                        label: 'Узел 1',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(72, 155, 233, 1)',
                        backgroundColor: 'rgba(72, 155, 233, 0)',
                    },
                    {
                        label: 'Узел 2',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(233, 120, 72, 1)',
                        backgroundColor: 'rgba(233, 120, 72, 0)',
        ");
                WriteLiteral(@"            },
                    {
                        label: 'Узел 3',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(236, 84, 122, 1)',
                        backgroundColor: 'rgba(236, 84, 122, 0)',
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                    }
                }
            },
        });
        var humChart = new Chart(ctx2, {
            type: 'line',
            data: {
                labels: labels2,
                datasets: [
                    {
                        label: 'Узел 1',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(72, 155, 233, 1)',
                        background");
                WriteLiteral(@"Color: 'rgba(72, 155, 233, 0)',
                    },
                    {
                        label: 'Узел 2',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(233, 120, 72, 1)',
                        backgroundColor: 'rgba(233, 120, 72, 0)',
                    },
                    {
                        label: 'Узел 3',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(236, 84, 122, 1)',
                        backgroundColor: 'rgba(236, 84, 122, 0)',
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                    }
                }
            },
        });
        var coChart = new Chart(ctx3, {
            ty");
                WriteLiteral(@"pe: 'line',
            data: {
                labels: labels3,
                datasets: [
                    {
                        label: 'Узел 1',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(72, 155, 233, 1)',
                        backgroundColor: 'rgba(72, 155, 233, 0)',
                    },
                    {
                        label: 'Узел 2',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(233, 120, 72, 1)',
                        backgroundColor: 'rgba(233, 120, 72, 0)',
                    },
                    {
                        label: 'Узел 3',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(236, 84, 122, 1)',
                        backgroundColor: 'rgba(236, 84, 122, 0)',
                    }
                ]
            },
            options: {
                responsive: true,
      ");
                WriteLiteral(@"          plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                    }
                }
            },
        });
        var co2Chart = new Chart(ctx4, {
            type: 'line',
            data: {
                labels: labels4,
                datasets: [
                    {
                        label: 'Узел 1',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(72, 155, 233, 1)',
                        backgroundColor: 'rgba(72, 155, 233, 0)',
                    },
                    {
                        label: 'Узел 2',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(233, 120, 72, 1)',
                        backgroundColor: 'rgba(233, 120, 72, 0)',
                    },
                    {
                        label: 'Узе");
                WriteLiteral(@"л 3',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(236, 84, 122, 1)',
                        backgroundColor: 'rgba(236, 84, 122, 0)',
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                    }
                }
            },
        });
        var lpgChart = new Chart(ctx5, {
            type: 'line',
            data: {
                labels: labels5,
                datasets: [
                    {
                        label: 'Узел 1',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(72, 155, 233, 1)',
                        backgroundColor: 'rgba(72, 155, 233, 0)',
                    },
                 ");
                WriteLiteral(@"   {
                        label: 'Узел 2',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(233, 120, 72, 1)',
                        backgroundColor: 'rgba(233, 120, 72, 0)',
                    },
                    {
                        label: 'Узел 3',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(236, 84, 122, 1)',
                        backgroundColor: 'rgba(236, 84, 122, 0)',
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                    }
                }
            },
        });
        var smkChart = new Chart(ctx6, {
            type: 'line',
            data: {
                labels: labels6,
     ");
                WriteLiteral(@"           datasets: [
                    {
                        label: 'Узел 1',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(72, 155, 233, 1)',
                        backgroundColor: 'rgba(72, 155, 233, 0)',
                    },
                    {
                        label: 'Узел 2',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(233, 120, 72, 1)',
                        backgroundColor: 'rgba(233, 120, 72, 0)',
                    },
                    {
                        label: 'Узел 3',
                        data: [0, 0, 0, 0, 0, 0, 0, 0],
                        borderColor: 'rgba(236, 84, 122, 1)',
                        backgroundColor: 'rgba(236, 84, 122, 0)',
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                    ");
                WriteLiteral(@"    position: 'top',
                    },
                    title: {
                        display: false,
                    }
                }
            },
        });

        buttons.forEach(but => but.addEventListener(""click"", pressedHandler));
        buttons_2.forEach(but => but.addEventListener(""click"", pressedHandler_2));

        ajaxChartsInit();

        function addData(chart, label, data) {
            chart.data.labels.push(label);
            i = 0;
            chart.data.datasets.forEach((dataset) => {
                if (i == 0) dataset.data.push(data[0]);
                if (i == 1) dataset.data.push(data[1]);
                if (i == 2) dataset.data.push(data[2]);
                i++;
            });
            chart.update();
        }

        function removeData(chart) {
            chart.data.labels.splice(0, 1);
            chart.data.datasets.forEach((dataset) => {
                dataset.data.splice(0, 1);
            });
            chart.u");
                WriteLiteral(@"pdate();
        }

        function pressedHandler(event) {
            event.preventDefault();
            let target = event.target;
            buttons.forEach(but => but.classList.remove(""page__button-checked""));
            target.classList.add(""page__button-checked"");
        }

        function pressedHandler_2(event) {
            event.preventDefault();
            let target = event.target;
            buttons_2.forEach(but => but.classList.remove(""page__button-checked""));
            target.classList.add(""page__button-checked"");
        }

        function ajaxR() {
            $.ajax({
                url: ""SendDataToFront"",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: ""GET"",
                success: function (data) {
                    console.log(data);
  ");
                WriteLiteral(@"                  let jsonData = JSON.parse(data);
                    let newDate = new Date();
                    let timeStr = newDate.getHours() + "":"" + (newDate.getMinutes());
                    document.querySelector("".time"").textContent = timeStr;
                    document.querySelector("".temp"").textContent = jsonData.Temperature;
                    document.querySelector("".humi"").textContent = jsonData.Humidity;
                    document.querySelector("".mois"").textContent = jsonData.Moisture;
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function chartInitHelper(chart, data, time) {
            let i = 0;
            while (i < 8) {
                let arr = new Array();
                arr[2] = data[i];
                arr[1] = data[8 + i];
                arr[0] = data[16 + i];
                removeData(chart);
                addData(chart, time, arr);
     ");
                WriteLiteral(@"           i++;
            }
        }

        function ajaxChartsInit() {
            $.ajax({
                url: ""InitDataToCharts"",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: ""GET"",
                success: function (data) {
                    let jsonData = JSON.parse(data);

                    let temp = new Array();
                    let hum = new Array();
                    let co = new Array();
                    let co2 = new Array();
                    let smk = new Array();
                    let lpg = new Array();

                    for (let node of jsonData[0].nodeData) {
                        temp.push(node.temp);
                        hum.push(node.hum);
                        co.push(node.co);
                        co2.push(node.co2);");
                WriteLiteral(@"
                        smk.push(node.smk);
                        lpg.push(node.lpg);
                    }
                    for (let node of jsonData[1].nodeData) {
                        temp.push(node.temp);
                        hum.push(node.hum);
                        co.push(node.co);
                        co2.push(node.co2);
                        smk.push(node.smk);
                        lpg.push(node.lpg);
                    }
                    for (let node of jsonData[2].nodeData) {
                        temp.push(node.temp);
                        hum.push(node.hum);
                        co.push(node.co);
                        co2.push(node.co2);
                        smk.push(node.smk);
                        lpg.push(node.lpg);
                    }

                    temp = temp.reverse();
                    hum = hum.reverse();
                    co = co.reverse();
                    co2 = co2.reverse();
                    lpg = lpg");
                WriteLiteral(@".reverse();
                    smk = smk.reverse();

                    chartInitHelper(tempChart, temp, jsonData[0].time);
                    chartInitHelper(humChart, hum, jsonData[0].time);
                    chartInitHelper(coChart, co, jsonData[0].time);
                    chartInitHelper(co2Chart, co2, jsonData[0].time);
                    chartInitHelper(lpgChart, lpg, jsonData[0].time);
                    chartInitHelper(smkChart, smk, jsonData[0].time);
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function ajaxCharts() {
            $.ajax({
                url: ""SendDataToCharts"",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: ""GET"",
                s");
                WriteLiteral(@"uccess: function (data) {
                    let jsonData = JSON.parse(data);

                    let temp = new Array();
                    let hum = new Array();
                    let co = new Array();
                    let co2 = new Array();
                    let smk = new Array();
                    let lpg = new Array();

                    let node1 = jsonData[0].nodeData;
                    temp.push(node1.temp);
                    hum.push(node1.hum);
                    co.push(node1.co);
                    co2.push(node1.co2);
                    smk.push(node1.smk);
                    lpg.push(node1.lpg);

                    let node2 = jsonData[1].nodeData;
                    temp.push(node2.temp);
                    hum.push(node2.hum);
                    co.push(node2.co);
                    co2.push(node2.co2);
                    smk.push(node2.smk);
                    lpg.push(node2.lpg);

                    let node3 = jsonData[2].nodeData;
  ");
                WriteLiteral(@"                  temp.push(node3.temp);
                    hum.push(node3.hum);
                    co.push(node3.co);
                    co2.push(node3.co2);
                    smk.push(node3.smk);
                    lpg.push(node3.lpg);

                    removeData(tempChart);
                    addData(tempChart, jsonData[0].time, temp);

                    removeData(humChart);
                    addData(humChart, jsonData[0].time, hum);

                    removeData(coChart);
                    addData(coChart, jsonData[0].time, co);

                    removeData(co2Chart);
                    addData(co2Chart, jsonData[0].time, co2);

                    removeData(lpgChart);
                    addData(lpgChart, jsonData[0].time, lpg);

                    removeData(smkChart);
                    addData(smkChart, jsonData[0].time, smk);
                },
                error: function (error) {
                    console.error(error);
                }
 ");
                WriteLiteral(@"           });
        }

        function ajaxRelOn() {
            $.ajax({
                url: ""SendPost?command=AR1"",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: ""POST"",
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function ajaxBuzOn() {
            $.ajax({
                url: ""SendPost?command=AZ1"",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: ""POST"",
                error: function (error) {
                    console.error(error);
                }
         ");
                WriteLiteral(@"   });
        }

        function ajaxBuzOff() {
            $.ajax({
                url: ""SendPost?command=AZ0"",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: ""POST"",
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function ajaxRelOff() {
            $.ajax({
                url: ""SendPost?command=AR0"",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: ""POST"",
                error: function (error) {
                    console.error(error);
                }
            });");
                WriteLiteral(@"
        }

        function ajaxGetData() {
            $.ajax({
                url: ""NewRecord"",
                headers: {
                    'Accept': 'application/json, text/javascript, /, q=0.01',
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                type: ""POST"",
                error: function (error) {
                    console.error(error);
                }
            });
        }

        setInterval(ajaxCharts, 1000 * 10);
        $('#bulb-on').click(ajaxBuzOn);
        $('#bulb-off').click(ajaxBuzOff);
        $('#relay-on').click(ajaxRelOn);
        $('#relay-off').click(ajaxRelOff);
        $('#get-data').click(ajaxGetData);
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<Plan_io_T.Models.ArduinoData>> Html { get; private set; }
    }
}
#pragma warning restore 1591
